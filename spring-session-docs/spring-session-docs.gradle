plugins {
    id "io.github.rwinch.antora" version "0.0.2"
}

apply plugin: 'io.spring.convention.docs'
apply plugin: 'io.spring.convention.spring-test'

dependencies {
	testImplementation project(':spring-session-core')
	testImplementation project(':spring-session-data-redis')
//	testImplementation project(':spring-session-hazelcast')
	testImplementation project(':spring-session-jdbc')
	testImplementation 'org.springframework:spring-jdbc'
	testImplementation 'org.springframework:spring-messaging'
	testImplementation 'org.springframework:spring-webmvc'
	testImplementation 'org.springframework:spring-websocket'
	testImplementation 'org.springframework.security:spring-security-config'
	testImplementation 'org.springframework.security:spring-security-web'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testImplementation 'org.springframework:spring-test'
	testImplementation 'org.assertj:assertj-core'
	testImplementation 'com.hazelcast:hazelcast'
	testImplementation 'io.lettuce:lettuce-core'
    testImplementation 'jakarta.annotation:jakarta.annotation-api'
	testImplementation 'jakarta.servlet:jakarta.servlet-api'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

antora {
    antoraVersion = "3.1.0"
    arguments = ["--fetch"]
}

tasks.antora {
    environment = [
            "ALGOLIA_API_KEY" : "82c7ead946afbac3cf98c32446154691",
            "ALGOLIA_APP_ID" : "244V8V9FGG",
            "ALGOLIA_INDEX_NAME" : "session-docs"
    ]
}

sourceSets {
    test {
        java {
            srcDirs = ['modules/ROOT/examples/java']
        }
        resources {
            srcDirs = ['modules/ROOT/examples/resources']
        }
    }
}

tasks.register("generateAntora") {
    group = "Documentation"
    description = "Generates the antora.yml for dynamic properties"
    doLast {
        def dollar = '$'
        def ghTag = snapshotBuild ? 'main' : project.version
        def ghUrl = "https://github.com/spring-projects/spring-session/tree/$ghTag"
        def versions = resolvedVersions(project.configurations.testRuntimeClasspath)
        def ymlVersions = ""
        versions.call().each { name, version ->
            ymlVersions += """
    ${name}: ${version}"""
        }
        def outputFile = new File("$buildDir/generateAntora/antora.yml")
        outputFile.getParentFile().mkdirs()
        outputFile.createNewFile()
        def antoraYmlText = file("antora.yml").getText()
        outputFile.setText("""$antoraYmlText
title: Spring Session
start_page: ROOT:index.adoc
nav:
  - modules/ROOT/nav.adoc

asciidoc:
  attributes:
    download-url: "https://github.com/spring-projects/spring-session/archive/${ghTag}.zip"
    gh-samples-url: "$ghUrl/spring-session-samples/"
    samples-dir: "example${dollar}spring-session-samples/"
    session-jdbc-main-resources-dir: "example${dollar}session-jdbc-main-resources-dir/"
    spring-session-data-mongodb-dir: "example${dollar}spring-session-data-mongodb-dir/"
    docs-test-dir: "example${dollar}java/"
    websocketdoc-test-dir: 'example${dollar}java/docs/websocket/'
    docs-test-resources-dir: "example${dollar}resources/"
    indexdoc-tests: "example${dollar}java/docs/IndexDocTests.java"
    spring-session-version: ${project.version}
    version-milestone: $milestoneBuild
    version-release: $releaseBuild
    version-snapshot: $snapshotBuild
    spring-boot-version: ${springBootVersion}
${ymlVersions}
""")
    }
}

repositories {
    maven { url "https://repo.spring.io/release" }
}

def resolvedVersions(Configuration configuration) {
    return {
        configuration.resolvedConfiguration
                .resolvedArtifacts
                .collectEntries { [(it.name + "-version"): it.moduleVersion.id.version] }
    }
}
